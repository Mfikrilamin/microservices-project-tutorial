server:
  port: 8081
logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

spring:
  application:
    name: order-service
  # Database
  datasource:
    url: jdbc:postgresql://localhost:5433/orderservice
    username: postgres
    password: admin
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  # Security
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8181/realms/spring-boot-microservice-realm
          jwk-set-uri: http://localhost:8181/realms/spring-boot-microservice-realm/protocol/openid-connect/certs
# Eureka
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka

# Actuator
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  # Zipkin distributed tracing
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
      # http://localhost:9411/api/v2/spans
  tracing:
    sampling:
      probability: 1.0

# Resilience4j properties
resilience4j:
  circuitbreaker:
    instances:
      inventory:
        registerHealthIndicator: true # State - closed, open, half-open
        event-consumer-buffer-size: 10
        slidingWindowType: COUNT_BASED # Circuit breaker trigger mechanism
        slidingWindowSize: 5 # Number of fail request to trigger circuit breaker
        failureRateThreshold: 50 # 50% rate fail threshold
        waitDurationInOpenState: 5s # Time taken to change from open to half-open state
        permittedNumberOfCallsInHalfOpenState: 3 # How many calls are required to change to closed or open state
        automaticTransitionFromOpenToHalfOpenEnabled: true
  # Resilience4j Retry properties
  retry:
    instances:
      inventory:
        max-attempts: 3
        wait-duration: 5s
